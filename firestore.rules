rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Helper function to check if a user is a technician
    function isTechnician() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'technician';
    }

    // Helper function to check if the request is from an authenticated user
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if the user owns the document (based on UID)
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Users Collection
    match /users/{userId} {
      allow read: if isAuthenticated() && (isAdmin() || isOwner(userId));
      allow create: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      allow update: if isAuthenticated() && (
                    isAdmin() ||
                    (isOwner(userId) && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['displayName']))
                  );
      allow delete: if isAuthenticated() && isAdmin();
    }

    // Clients Collection
    match /clients/{clientId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && isAdmin();
    }

    // Locations Collection
    match /locations/{locationId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && isAdmin();
    }

    // TimeEntries Collection
    match /timeEntries/{entryId} {
      allow create: if isAuthenticated() &&
                      (
                        (isTechnician() && request.resource.data.technicianId == request.auth.uid) ||
                        isAdmin()
                      );

      allow read: if isAuthenticated() &&
                    (
                      (isTechnician() && resource.data.technicianId == request.auth.uid) ||
                      isAdmin()
                    );

      // Allow technicians to update their own entries, and admins to update any entry
      allow update: if isAuthenticated() && (
        isAdmin() || 
        (isTechnician() && resource.data.technicianId == request.auth.uid)
      );

      allow delete: if isAuthenticated() && isAdmin();
    }

    // JobSubmissions Collection
    match /jobSubmissions/{submissionId} {
      allow create: if isAuthenticated() &&
                      isTechnician() &&
                      request.resource.data.technicianId == request.auth.uid &&
                      request.resource.data.status == 'pending_approval';

      allow read: if isAuthenticated() &&
                    (
                      (isTechnician() && resource.data.technicianId == request.auth.uid) ||
                      isAdmin()
                    );

      allow update: if isAuthenticated() &&
                      isAdmin() &&
                      request.resource.data.diff(resource.data).affectedKeys().hasOnly(['status']);

      allow delete: if isAuthenticated() && isAdmin();
    }
  }
}
